{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\idiot\\\\source\\\\repos\\\\ToDoList\\\\to-do-list\\\\src\\\\components\\\\TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  // /^\\s*$/.test will check if the todo.text is null or only spaces\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    //ternary operator(?) is a simplified conditional\n    setTodos(previous => previous.map(item => item.id === todoId ? newValue : item));\n  };\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" sELOCO \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo,\n      updateTodo: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","TodoForm","Todo","jsxDEV","_jsxDEV","TodoList","_s","todos","setTodos","addTodo","todo","text","test","newTodos","updateTodo","todoId","newValue","previous","map","item","id","removeTodo","removeArr","filter","completeTodo","updatedTodos","isComplete","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/idiot/source/repos/ToDoList/to-do-list/src/components/TodoList.jsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport Todo from './Todo'\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text))\r\n        {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);  \r\n    };\r\n\r\n    // /^\\s*$/.test will check if the todo.text is null or only spaces\r\n    const updateTodo= (todoId, newValue) => {if(!newValue.text || /^\\s*$/.test(newValue.text))\r\n    {\r\n        return;\r\n    }\r\n\r\n    //ternary operator(?) is a simplified conditional\r\n    setTodos (previous => previous.map(item => (item.id === todoId ? newValue : item)));\r\n}\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n\r\n        setTodos(removeArr);\r\n\r\n    };\r\n\r\n    const completeTodo = id =>\r\n    {\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id)\r\n            {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodos);\r\n    }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n        <h1> sELOCO </h1>\r\n        <TodoForm onSubmit={addTodo} />\r\n        <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo} />\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default TodoList"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,OAAO,GAAGC,IAAI,IAAI;IACpB,IAAG,CAACA,IAAI,CAACC,IAAI,IAAI,OAAO,CAACC,IAAI,CAACF,IAAI,CAACC,IAAI,CAAC,EACxC;MACI;IACJ;IAEA,MAAME,QAAQ,GAAG,CAACH,IAAI,EAAE,GAAGH,KAAK,CAAC;IAEjCC,QAAQ,CAACK,QAAQ,CAAC;EACtB,CAAC;;EAED;EACA,MAAMC,UAAU,GAAEA,CAACC,MAAM,EAAEC,QAAQ,KAAK;IAAC,IAAG,CAACA,QAAQ,CAACL,IAAI,IAAI,OAAO,CAACC,IAAI,CAACI,QAAQ,CAACL,IAAI,CAAC,EACzF;MACI;IACJ;;IAEA;IACAH,QAAQ,CAAES,QAAQ,IAAIA,QAAQ,CAACC,GAAG,CAACC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,GAAGC,QAAQ,GAAGG,IAAK,CAAC,CAAC;EACvF,CAAC;EAEG,MAAME,UAAU,GAAGD,EAAE,IAAI;IACrB,MAAME,SAAS,GAAG,CAAC,GAAGf,KAAK,CAAC,CAACgB,MAAM,CAACb,IAAI,IAAIA,IAAI,CAACU,EAAE,KAAKA,EAAE,CAAC;IAE3DZ,QAAQ,CAACc,SAAS,CAAC;EAEvB,CAAC;EAED,MAAME,YAAY,GAAGJ,EAAE,IACvB;IACI,IAAIK,YAAY,GAAGlB,KAAK,CAACW,GAAG,CAACR,IAAI,IAAI;MACjC,IAAGA,IAAI,CAACU,EAAE,KAAKA,EAAE,EACjB;QACIV,IAAI,CAACgB,UAAU,GAAG,CAAChB,IAAI,CAACgB,UAAU;MACtC;MACA,OAAOhB,IAAI;IACf,CAAC,CAAC;IACFF,QAAQ,CAACiB,YAAY,CAAC;EAC1B,CAAC;EAIH,oBACErB,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAAAuB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB3B,OAAA,CAACH,QAAQ;MAAC+B,QAAQ,EAAEvB;IAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/B3B,OAAA,CAACF,IAAI;MAACK,KAAK,EAAEA,KAAM;MAACiB,YAAY,EAAEA,YAAa;MAACH,UAAU,EAAEA,UAAW;MAACP,UAAU,EAAEA;IAAW;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjG,CAAC;AAGV;AAACzB,EAAA,CArDQD,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAuDjB,eAAeA,QAAQ;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}